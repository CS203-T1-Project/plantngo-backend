name: main
spring:
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQL94Dialect
        format_sql: true
    generate-ddl: true
    hibernate:
      ddl-auto: create
      naming:
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

  datasource:
    url: jdbc:postgresql://${DATABASE_HOST}:${DATABASE_PORT}/${POSTGRES_DB}?currentSchema=${DATABASE_SCHEMA}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
  
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB
  


server:
  port: 8080
  error:
    include-message: always
    include-binding-errors: always
    include-exception: false

mail:
  host: ${MAIL_HOST}
  port: ${MAIL_PORT}
  username: ${MAIL_USERNAME}
  password: ${MAIL_PASSWORD}
  protocol: smtp
  tls: true
  properties:
    mail:
      smtp:
        auth: true
        starttls.enable: true
        ssl.trust: ${MAIL_HOST}

cloud:
  aws:
    credentials:
      access-key: ${AWS_ACCESS_KEY}
      secret-key: ${AWS_SECRET_KEY}
    region:
      static: ${AWS_REGION}
    stack:
      auto: false
    bucket: ${AWSS3_BUCKET}

jwt:
  secret: ${JWT_SECRET}